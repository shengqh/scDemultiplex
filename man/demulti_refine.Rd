% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scDemultiplex.R
\name{demulti_refine}
\alias{demulti_refine}
\title{demulti_refine:}
\usage{
demulti_refine(
  obj,
  output_prefix = NULL,
  p.cut = 0.001,
  iterations = 10,
  init_column = "scDemultiplex_cutoff",
  mc.cores = 1,
  refine_negative_doublet_only = FALSE,
  min_singlet_cross_assigned = 3,
  min_tag_cross_assigned = 2
)
}
\arguments{
\item{obj}{= SEURAT OBJECT with the data to be analyzed.}

\item{output_prefix}{= CHARACTER prefix to be put on the output file names (default NULL).}

\item{p.cut}{= NUMERIC value between 0 and 1 to use as the pvalue cut off for significance (default 0.001).}

\item{iterations}{= INTEGER of how many cell classification iterations to go through (default 10).}

\item{init_column}{= CHARACTER name of the column with the initial classifications. If run directly after demulti_cutoff, leave as default (default "scDemultiplex_cutoff").}

\item{mc.cores}{= INTEGER of how many cores to run in parallel (default 1).}

\item{refine_negative_doublet_only}{= LOGICAL if want only negative cells reported, set as TRUE (default FALSE).}

\item{min_singlet_cross_assigned}{= INTEGER of how many cells are allowed to shift from singlet to doublet before halting the analysis (default 3).}

\item{min_tag_cross_assigned}{= INTEGER of how many cells can share tags before halting the analysis (default 2).}
}
\value{
Seurat object with refined cell classifications
}
\description{
Function that refines the cell classification iterations performed in demulti_cutoff and calculates a pvalue representing the likelihood of a tag representing a doublet (two cells) or negative (zero cells).
}
\examples{
#This occurs after the example for demulti_cutoff
#object from the end of that example used as 'obj'

#Running demulti_refine
obj<-demulti_refine(obj, mc.cores=ntags)

#Table of Single HTO/Doublet/Negative
print(kable(table(obj$scDemultiplex)))

#Table of Singlet/Doublet/Negative
print(kable(table(obj$scDemultiplex.global)))

#Plotting the results of demulti_refine in a UMAP format
g<-DimPlot(obj, reduction = "umap", group.by="scDemultiplex")
print(g)

}
