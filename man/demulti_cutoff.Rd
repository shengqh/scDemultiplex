% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scDemultiplex.R
\name{demulti_cutoff}
\alias{demulti_cutoff}
\title{demulti_cutoff:}
\usage{
demulti_cutoff(
  counts,
  output_prefix = NULL,
  cutoff_startval = 0,
  mc.cores = 1,
  cutoff_list = NULL
)
}
\arguments{
\item{counts}{= SEURAT OBJECT with the data to be analyzed.}

\item{output_prefix}{= CHARACTER prefix to be put on the output file names (default NULL).}

\item{cutoff_startval}{= INTEGER Start value used to estimate cutoff (default 0).}

\item{mc.cores}{= INTEGER of how many cores to run in parallel (default 1).}

\item{cutoff_list}{= NAMED LIST cutoffs for each tagname (default NULL). If the cutoff_list is set, classification will be performed based on those predefined cutoffs.}
}
\value{
Seurat object with initial characterizations
}
\description{
Function that performs the initial cell classification (Singlet, Doublet, Negative).
}
\examples{
#Load in and prepare the data
hto_counts = data.frame(fread("https://raw.githubusercontent.com/Oshlack/hashtag-demux-paper/main/data/batch1_c1_hto_counts.csv"), row.names=1, check.names=F)
#As an example, we sample 4000 cells to speed up
hto_counts <- hto_counts[, sample(colnames(hto_counts), size=4000, replace=F)]
#change to Seurat object
obj <- CreateSeuratObject(counts = hto_counts, assay="HTO")
obj <- NormalizeData(obj, assay = "HTO", normalization.method = "CLR")
DefaultAssay(object = obj) <- "HTO"
tagnames=rownames(obj[["HTO"]])
ntags=length(tagnames)

#Normalize and run UMAP
obj<-ScaleData(obj, features=tagnames, verbose=FALSE)
obj<-RunPCA(obj, features=tagnames, approx=FALSE)
obj<-RunUMAP(obj, features=tagnames, slot="scale.data")

#Running demulti_cutoff
obj = demulti_cutoff(obj, mc.cores=ntags)

#Table of cells by Single HTO/Doublet/Negative
print(kable(table(obj$scDemultiplex_cutoff)))

#Table of Singlet/Foublet/Negative
print(kable(table(obj$scDemultiplex_cutoff.global)))

#Plotting the results of demulti_cutoff in UMAP format
g<-DimPlot(obj, reduction = "umap", group.by="scDemultiplex_cutoff")
print(g)

}
